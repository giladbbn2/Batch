using Batch.Worker;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


using System.Net;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.ServiceModel.Web;
using System.Text;
using System.Threading;

namespace Batch.Foreman
{
    public abstract class ForemanBase
    {
        public readonly int NetMQPort;
        public readonly string PathToSettingsFile;

        private static Dictionary<string, Func<WorkerBase>> WorkerActivator;


        public ForemanBase(ForemanConfiguration Config)
        {
            NetMQPort = Config.NetMQPort;
            PathToSettingsFile = Config.PathToSettingsFile;
        }

        public void LoadSettingsFile()
        {
            if (PathToSettingsFile == null)
                throw new ArgumentNullException("PathToSettingsFile");

            if (!File.Exists(PathToSettingsFile))
                throw new FileNotFoundException(PathToSettingsFile);

            string settings = File.ReadAllText(PathToSettingsFile);
            var serializer = new JavaScriptSerializer();
            var sets = (IEnumerable<KeyValuePair<string, object>>)serializer.DeserializeObject(settings);


            try
                {
                    ExeConfigurationFileMap configMap = new ExeConfigurationFileMap();
                    configMap.ExeConfigFilename = PathToSettingsFile;
                    var config = ConfigurationManager.OpenMappedExeConfiguration(configMap, ConfigurationUserLevel.None);

                    Console.WriteLine(config.Sections.ToString());

                    var a = config.AppSettings.Settings["name1"].Value;
                    Console.WriteLine(a);
                }
                catch (Exception ex)
                {

                }
        }

        public void RegisterWorkers()
        {

        }

    }
}
